name: Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Configure Cloudflare API Token
      run: echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV
    - name: Configure Cloudflare Zone ID
      run: echo "CLOUDFLARE_ZONE_ID=${{ secrets.CLOUDFLARE_ZONE_ID }}" >> $GITHUB_ENV
    - name: Navigate to root directory and then iac
      run: cd $GITHUB_WORKSPACE/iac
    - name: Terraform Init
      run: terraform init
    - name: Terraform Plan
      run: terraform plan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Configure Cloudflare API Token
      run: echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV
    - name: Configure Cloudflare Zone ID
      run: echo "CLOUDFLARE_ZONE_ID=${{ secrets.CLOUDFLARE_ZONE_ID }}" >> $GITHUB_ENV
    - name: Run Terraform Apply
      run: terraform apply -auto-approve